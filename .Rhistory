axis(1, at = sort(c(seq(0, 12, 1), round(t1, 5), round(t2, 5), round(t3, 5))), las=2)
axis(2, at = seq(0, 0.6, 0.01), las=2)
lines(xa, gost2(xa), type="l", col="green")
lines(xa, gost3(xa), type="l", col="blue")
abline(v = t1, col = "violet")
abline(v = t1-SE1, col = "orange", lty = 2, lwd=1)
abline(v = t1+SE1, col = "orange", lty = 2, lwd=1)
abline(v = t2, col = "violet")
abline(v = t2-SE2, col = "orange", lty = 2, lwd=1)
abline(v = t2+SE2, col = "orange", lty = 2, lwd=1)
abline(v = t3, col = "violet")
abline(v = t3-SE3, col = "orange", lty = 2, lwd=1)
abline(v = t3+SE3, col = "orange", lty = 2, lwd=1)
legend(x="topright", legend=c("Gostota za I. poskus", "Gostota za II. poskus", "Gostota za III. poskus"), col = c("red", "green", "blue"), lwd=2)
#Nastavimo mesto datoteke (Po potrebi spremenite na mesto, kamor ste shranili datoteke)
setwd("C:/Users/Uporabnik/Documents/GitHub/STAT")
#Naložimo podatke eksperimentov
kratki <- read.csv("Kromatin_kratki.csv")
srednji <- read.csv("Kromatin_srednji.csv")
dolgi <- read.csv("Kromatin_dolgi.csv")
#Za cenilko, ki smo jo pridobili po metodi momentov, izračunamo numerične približke
#Prvi eksperiment
n1 <- nrow(kratki)
x1 <- kratki[, 1]
t1 <- sqrt(2/pi)*mean(x1)
SE1 <- sqrt((4 - pi)/(n1 * pi))*t1
#Drugi eksperiment
n2 <- nrow(srednji)
x2 <- srednji[, 1]
t2 <- sqrt(2/pi)*mean(x2)
SE2 <- sqrt((4 - pi)/(n2 * pi))*t2
#Tretji eksperiment
n3 <- nrow(dolgi)
x3 <- dolgi[, 1]
t3 <- sqrt(2/pi)*mean(x3)
SE3 <- sqrt((4 - pi)/(n3 * pi))*t3
#Zapišimo ocenjene gostote porazdelitve
gostota <- function(y, t) {
# y je vektor razdalj, t skalarni parameter
if(t != 0) {
b <- rep(0, length(y)) #vektor v katerega hranimo rezultate
for (i in 1:length(y)){
if(y[i] >0){
b[i] <- y[i]/(t)^2 * exp(- (y[i]^2) / (2*(t)^2))
}
else {
b[i] <- 0
}
}
}
return(b)
}
gost1 <- function(r) {
gostota(r, t1)
}
gost2 <- function(r) {
gostota(r, t2)
}
gost3 <- function(r) {
gostota(r, t3)
}
#Za vsak eksperiment še narišemo gostoto porazdelitve
par(mfrow=c(2, 2))
xk <- sort(c(seq(0, 6, 0.001), t1-SE1, t1, t1+SE1))
xs <- sort(c(seq(0, 8, 0.001), t2-SE2, t2, t2+SE2))
xd <- sort(c(seq(0, 12, 0.001), t3-SE3, t3, t3+SE3))
xa <- sort(c(xd, t1-SE1, t1, t1+SE1, t2-SE2, t2, t2+SE2))
plot(xk, gost1(xk), type="l", main="Gostota razdalj v 1. poskusu", xaxt= "n", yaxt = "n", xlab = "", ylab="")
axis(1, at = sort(c(seq(0, 6, 1), round(t1, 5))), las=2)
axis(2, at = seq(0, 0.6, 0.01), las=2)
abline(v = t1, col = "blue")
abline(v = t1-SE1, col = "red", lty = 2, lwd=1)
abline(v = t1+SE1, col = "red", lty = 2, lwd=1)
plot(xs, gost2(xs), type="l", main="Gostota razdalj v 2. poskusu", xaxt= "n", yaxt = "n", xlab = "", ylab="")
axis(1, at = sort(c(seq(0, 10, 1), round(t2, 5))), las=2)
axis(2, at = seq(0, 0.3, 0.01), las=2)
abline(v = t2, col = "blue")
abline(v = t2-SE2, col = "red", lty = 2, lwd=1)
abline(v = t2+SE2, col = "red", lty = 2, lwd=1)
plot(xd, gost3(xd), type="l", main="Gostota razdalj v 3. poskusu", xaxt = "n", yaxt = "n", xlab = "", ylab="")
axis(1, at = sort(c(seq(0, 12, 1), round(t3, 5))), las=2)
axis(2, at = seq(0, 0.2, 0.01), las=2)
abline(v = t3, col = "blue")
abline(v = t3-SE3, col = "red", lty = 2, lwd=1)
abline(v = t3+SE3, col = "red", lty = 2, lwd=1)
plot(xa, gost1(xa), type="l", main="Gostote razdalj v vseh treh poskusih", xaxt= "n", yaxt = "n", xlab = "", ylab = "", col="red")
axis(1, at = sort(c(seq(0, 12, 1), round(t1, 5), round(t2, 5), round(t3, 5))), las=2)
axis(2, at = seq(0, 0.6, 0.01), las=2)
lines(xa, gost2(xa), type="l", col="green")
lines(xa, gost3(xa), type="l", col="blue")
abline(v = t1, col = "violet")
abline(v = t1-SE1, col = "orange", lty = 2, lwd=1)
abline(v = t1+SE1, col = "orange", lty = 2, lwd=1)
abline(v = t2, col = "violet")
abline(v = t2-SE2, col = "orange", lty = 2, lwd=1)
abline(v = t2+SE2, col = "orange", lty = 2, lwd=1)
abline(v = t3, col = "violet")
abline(v = t3-SE3, col = "orange", lty = 2, lwd=1)
abline(v = t3+SE3, col = "orange", lty = 2, lwd=1)
legend(x="topright", legend=c("Gostota za I. poskus", "Gostota za II. poskus", "Gostota za III. poskus"), col = c("red", "green", "blue"), lwd=2)
cat("Približek za theta v prvem eksperimentu je", t1, ".")
cat("Standardna napaka v njem pa znaša",SE1, ".")
cat("Približek za theta v drugem eksperimentu je", t2, ".")
cat("Standardna napaka v njem znaša", SE2, ".")
cat("Približek za theta v tretjem eksperimentu je", t3, ".")
cat("Standardna napaka v njem znaša ", SE3, ".")
#Nastavimo mesto datoteke (Po potrebi spremenite na mesto, kamor ste shranili datoteke)
#Npr. setwd("C:/Users/Uporabnik/Documents/GitHub/STAT")
#Naložimo podatke eksperimentov
kratki <- read.csv("Kromatin_kratki.csv")
srednji <- read.csv("Kromatin_srednji.csv")
dolgi <- read.csv("Kromatin_dolgi.csv")
#Prvi eksperiment
n1 <- nrow(kratki)
x1 <- kratki[, 1]
t1.mnv <- sqrt(sum(x1^2)/(2*n1))
t1.mm <- sqrt(2/pi)*mean(x1)
#Drugi eksperiment
n2 <- nrow(srednji)
x2 <- srednji[, 1]
t2.mnv <- sqrt(sum(x2^2)/(2*n2))
t2.mm <- sqrt(2/pi)*mean(x2)
#Tretji eksperiment
n3 <- nrow(dolgi)
x3 <- dolgi[, 1]
t3.mnv <- sqrt(sum(x3^2)/(2*n3))
t3.mm <- sqrt(2/pi)*mean(x3)
gostota <- function(y, t) {
# y je vektor razdalj, t skalarni parameter
if(t != 0) {
b <- rep(0, length(y)) #vektor v katerega hranimo rezultate
for (i in 1:length(y)){
if(y[i] >0){
b[i] <- y[i]/(t)^2 * exp(- (y[i]^2) / (2*(t)^2))
}
else {
b[i] <- 0
}
}
}
return(b)
}
gostota1MNV <- function(r) {
gostota(r, t1.mnv)
}
gostota1MM <- function(r) {
gostota(r, t1.mm)
}
gostota2MNV <- function(r) {
gostota(r, t2.mnv)
}
gostota2MM <- function(r) {
gostota(r, t2.mm)
}
gostota3MNV <- function(r) {
gostota(r, t3.mnv)
}
gostota3MM <- function(r) {
gostota(r, t3.mm)
}
#Za vsak eksperiment poračunamo širino intervalov po modificiranem FD pravilu
wk <- 2.6*IQR(x1)/(n1)^(1/3)
ws <- 2.6*IQR(x2)/(n2)^(1/3)
wd <- 2.6*IQR(x3)/(n3)^(1/3)
#Zdaj poračunajmo vektorje, ki nam bodo določili meje intervalov
meje <- function(x){
#Sprejme stolpec meritev in vrne vektor mej med katerimi je razdalja enaka 
#širini razredov po modificiranem Freedman-Diaconisovem pravilu
n <- length(x)
M <- max(x)
i <- IQR(x)
#Širina razredov po Freedman-Diaconisovem pravilu zaokrožena na 5 decimalk
w <- round(2.6*i/n^(1/3), 5)
vec <- c(0)
j <- 0
while (j < M){
j <- j+w
vec <- c(vec, j)
}
return(vec)
}
xk <- sort(c(seq(0, max(x1+0.5), 0.001), t1.mnv, t1.mm))
xs <- sort(c(seq(0, max(x2+0.5), 0.001), t2.mnv, t2.mm))
xd <- sort(c(seq(0, max(x3+0.5), 0.001), t3.mnv, t3.mm))
xa <- sort(c(xk, xs, xd))
par(mfrow=c(1, 3))
h1<-hist(x1, breaks = meje(x1), col="red", xlab="", ylim = c(0.00, 0.7),
   main="Histogram meritev I. poskusa", prob = TRUE) 
lines(xk, gostota1MNV(xk), col="green", lwd=2)
lines(xk, gostota1MM(xk), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h2<-hist(x2, breaks = meje(x2), col="red", xlab="Dohodki družin tipa 1", ylim = c(0, 0.4),
   main="Histogram meritev II. poskusa", prob = TRUE) 
lines(xs, gostota2MNV(xs), col="green", lwd=2)
lines(xs, gostota2MM(xs), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h3<-hist(x3, breaks = meje(x3), col="red", xlab="Dohodki družin tipa 1", ylim = c(0, 0.3),
   main="Histogram meritev III. poskusa", prob = TRUE) 
lines(xd, gostota3MNV(xd), col="green", lwd=2)
lines(xd, gostota3MM(xd), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
#Nastavimo mesto datoteke (Po potrebi spremenite na mesto, kamor ste shranili datoteke)
#Npr. setwd("C:/Users/Uporabnik/Documents/GitHub/STAT")
#Naložimo podatke eksperimentov
kratki <- read.csv("Kromatin_kratki.csv")
srednji <- read.csv("Kromatin_srednji.csv")
dolgi <- read.csv("Kromatin_dolgi.csv")
#Prvi eksperiment
n1 <- nrow(kratki)
x1 <- kratki[, 1]
t1.mnv <- sqrt(sum(x1^2)/(2*n1))
t1.mm <- sqrt(2/pi)*mean(x1)
#Drugi eksperiment
n2 <- nrow(srednji)
x2 <- srednji[, 1]
t2.mnv <- sqrt(sum(x2^2)/(2*n2))
t2.mm <- sqrt(2/pi)*mean(x2)
#Tretji eksperiment
n3 <- nrow(dolgi)
x3 <- dolgi[, 1]
t3.mnv <- sqrt(sum(x3^2)/(2*n3))
t3.mm <- sqrt(2/pi)*mean(x3)
gostota <- function(y, t) {
# y je vektor razdalj, t skalarni parameter
if(t != 0) {
b <- rep(0, length(y)) #vektor v katerega hranimo rezultate
for (i in 1:length(y)){
if(y[i] >0){
b[i] <- y[i]/(t)^2 * exp(- (y[i]^2) / (2*(t)^2))
}
else {
b[i] <- 0
}
}
}
return(b)
}
gostota1MNV <- function(r) {
gostota(r, t1.mnv)
}
gostota1MM <- function(r) {
gostota(r, t1.mm)
}
gostota2MNV <- function(r) {
gostota(r, t2.mnv)
}
gostota2MM <- function(r) {
gostota(r, t2.mm)
}
gostota3MNV <- function(r) {
gostota(r, t3.mnv)
}
gostota3MM <- function(r) {
gostota(r, t3.mm)
}
#Za vsak eksperiment poračunamo širino intervalov po modificiranem FD pravilu
wk <- 2.6*IQR(x1)/(n1)^(1/3)
ws <- 2.6*IQR(x2)/(n2)^(1/3)
wd <- 2.6*IQR(x3)/(n3)^(1/3)
#Zdaj poračunajmo vektorje, ki nam bodo določili meje intervalov
meje <- function(x){
#Sprejme stolpec meritev in vrne vektor mej med katerimi je razdalja enaka 
#širini razredov po modificiranem Freedman-Diaconisovem pravilu
n <- length(x)
M <- max(x)
i <- IQR(x)
#Širina razredov po Freedman-Diaconisovem pravilu zaokrožena na 5 decimalk
w <- round(2.6*i/n^(1/3), 5)
vec <- c(0)
j <- 0
while (j < M){
j <- j+w
vec <- c(vec, j)
}
return(vec)
}
xk <- sort(c(seq(0, max(x1+0.5), 0.001), t1.mnv, t1.mm))
xs <- sort(c(seq(0, max(x2+0.5), 0.001), t2.mnv, t2.mm))
xd <- sort(c(seq(0, max(x3+0.5), 0.001), t3.mnv, t3.mm))
xa <- sort(c(xk, xs, xd))
#par(mfrow=c(1, 3))
h1<-hist(x1, breaks = meje(x1), col="red", xlab="", ylim = c(0.00, 0.7),
   main="Histogram meritev I. poskusa", prob = TRUE) 
lines(xk, gostota1MNV(xk), col="green", lwd=2)
lines(xk, gostota1MM(xk), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
#h2<-hist(x2, breaks = meje(x2), col="red", xlab="Dohodki družin tipa 1", ylim = c(0, 0.4),
   main="Histogram meritev II. poskusa", prob = TRUE) 
#lines(xs, gostota2MNV(xs), col="green", lwd=2)
#lines(xs, gostota2MM(xs), col="blue", lwd=2)
#legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
#h3<-hist(x3, breaks = meje(x3), col="red", xlab="Dohodki družin tipa 1", ylim = c(0, 0.3),
   main="Histogram meritev III. poskusa", prob = TRUE) 
#lines(xd, gostota3MNV(xd), col="green", lwd=2)
#lines(xd, gostota3MM(xd), col="blue", lwd=2)
#legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
#Nastavimo mesto datoteke (Po potrebi spremenite na mesto, kamor ste shranili datoteke)
#Npr. setwd("C:/Users/Uporabnik/Documents/GitHub/STAT")
#Naložimo podatke eksperimentov
kratki <- read.csv("Kromatin_kratki.csv")
srednji <- read.csv("Kromatin_srednji.csv")
dolgi <- read.csv("Kromatin_dolgi.csv")
#Prvi eksperiment
n1 <- nrow(kratki)
x1 <- kratki[, 1]
t1.mnv <- sqrt(sum(x1^2)/(2*n1))
t1.mm <- sqrt(2/pi)*mean(x1)
#Drugi eksperiment
n2 <- nrow(srednji)
x2 <- srednji[, 1]
t2.mnv <- sqrt(sum(x2^2)/(2*n2))
t2.mm <- sqrt(2/pi)*mean(x2)
#Tretji eksperiment
n3 <- nrow(dolgi)
x3 <- dolgi[, 1]
t3.mnv <- sqrt(sum(x3^2)/(2*n3))
t3.mm <- sqrt(2/pi)*mean(x3)
gostota <- function(y, t) {
# y je vektor razdalj, t skalarni parameter
if(t != 0) {
b <- rep(0, length(y)) #vektor v katerega hranimo rezultate
for (i in 1:length(y)){
if(y[i] >0){
b[i] <- y[i]/(t)^2 * exp(- (y[i]^2) / (2*(t)^2))
}
else {
b[i] <- 0
}
}
}
return(b)
}
gostota1MNV <- function(r) {
gostota(r, t1.mnv)
}
gostota1MM <- function(r) {
gostota(r, t1.mm)
}
gostota2MNV <- function(r) {
gostota(r, t2.mnv)
}
gostota2MM <- function(r) {
gostota(r, t2.mm)
}
gostota3MNV <- function(r) {
gostota(r, t3.mnv)
}
gostota3MM <- function(r) {
gostota(r, t3.mm)
}
#Za vsak eksperiment poračunamo širino intervalov po modificiranem FD pravilu
wk <- 2.6*IQR(x1)/(n1)^(1/3)
ws <- 2.6*IQR(x2)/(n2)^(1/3)
wd <- 2.6*IQR(x3)/(n3)^(1/3)
#Zdaj poračunajmo vektorje, ki nam bodo določili meje intervalov
meje <- function(x){
#Sprejme stolpec meritev in vrne vektor mej med katerimi je razdalja enaka 
#širini razredov po modificiranem Freedman-Diaconisovem pravilu
n <- length(x)
M <- max(x)
i <- IQR(x)
#Širina razredov po Freedman-Diaconisovem pravilu zaokrožena na 5 decimalk
w <- round(2.6*i/n^(1/3), 5)
vec <- c(0)
j <- 0
while (j < M){
j <- j+w
vec <- c(vec, j)
}
return(vec)
}
xk <- sort(c(seq(0, max(x1+0.5), 0.001), t1.mnv, t1.mm))
xs <- sort(c(seq(0, max(x2+0.5), 0.001), t2.mnv, t2.mm))
xd <- sort(c(seq(0, max(x3+0.5), 0.001), t3.mnv, t3.mm))
xa <- sort(c(xk, xs, xd))
#par(mfrow=c(1, 3))
h1<-hist(x1, breaks = meje(x1), col="red", xlab="", ylim = c(0.00, 0.7),
   main="Histogram meritev I. poskusa", prob = TRUE) 
lines(xk, gostota1MNV(xk), col="green", lwd=2)
lines(xk, gostota1MM(xk), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h2<-hist(x2, breaks = meje(x2), col="red", xlab="Dohodki družin tipa 1", ylim = c(0, 0.4),
   main="Histogram meritev II. poskusa", prob = TRUE) 
lines(xs, gostota2MNV(xs), col="green", lwd=2)
lines(xs, gostota2MM(xs), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
#h3<-hist(x3, breaks = meje(x3), col="red", xlab="Dohodki družin tipa 1", ylim = c(0, 0.3),
   main="Histogram meritev III. poskusa", prob = TRUE) 
#lines(xd, gostota3MNV(xd), col="green", lwd=2)
#lines(xd, gostota3MM(xd), col="blue", lwd=2)
#legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h3<-hist(x3, breaks = meje(x3), col="red", xlab="Dohodki družin tipa 1", ylim = c(0, 0.3),
   main="Histogram meritev III. poskusa", prob = TRUE) 
lines(xd, gostota3MNV(xd), col="green", lwd=2)
lines(xd, gostota3MM(xd), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h2<-hist(x2, breaks = meje(x2), col="red", xlab="", ylim = c(0, 0.4),
   main="Histogram meritev II. poskusa", prob = TRUE) 
lines(xs, gostota2MNV(xs), col="green", lwd=2)
lines(xs, gostota2MM(xs), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h1<-hist(x1, breaks = meje(x1), col="red", xlab="meritve", ylab="gostota", ylim = c(0.00, 0.7),
   main="Histogram meritev I. poskusa", prob = TRUE) 
lines(xk, gostota1MNV(xk), col="green", lwd=2)
lines(xk, gostota1MM(xk), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h2<-hist(x2, breaks = meje(x2), col="red", xlab="meritve", ylab="gostota", ylim = c(0, 0.4),
   main="Histogram meritev II. poskusa", prob = TRUE) 
lines(xs, gostota2MNV(xs), col="green", lwd=2)
lines(xs, gostota2MM(xs), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h3<-hist(x3, breaks = meje(x3), col="red", xlab="meritve", ylab="gostota", ylim = c(0, 0.3),
   main="Histogram meritev III. poskusa", prob = TRUE) 
lines(xd, gostota3MNV(xd), col="green", lwd=2)
lines(xd, gostota3MM(xd), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
#Nastavimo mesto datoteke (Po potrebi spremenite na mesto, kamor ste shranili datoteke)
#Npr. setwd("C:/Users/Uporabnik/Documents/GitHub/STAT")
#Naložimo podatke eksperimentov
kratki <- read.csv("Kromatin_kratki.csv")
srednji <- read.csv("Kromatin_srednji.csv")
dolgi <- read.csv("Kromatin_dolgi.csv")
#Prvi eksperiment
n1 <- nrow(kratki)
x1 <- kratki[, 1]
t1.mnv <- sqrt(sum(x1^2)/(2*n1))
t1.mm <- sqrt(2/pi)*mean(x1)
#Drugi eksperiment
n2 <- nrow(srednji)
x2 <- srednji[, 1]
t2.mnv <- sqrt(sum(x2^2)/(2*n2))
t2.mm <- sqrt(2/pi)*mean(x2)
#Tretji eksperiment
n3 <- nrow(dolgi)
x3 <- dolgi[, 1]
t3.mnv <- sqrt(sum(x3^2)/(2*n3))
t3.mm <- sqrt(2/pi)*mean(x3)
gostota <- function(y, t) {
# y je vektor razdalj, t skalarni parameter
if(t != 0) {
b <- rep(0, length(y)) #vektor v katerega hranimo rezultate
for (i in 1:length(y)){
if(y[i] >0){
b[i] <- y[i]/(t)^2 * exp(- (y[i]^2) / (2*(t)^2))
}
else {
b[i] <- 0
}
}
}
return(b)
}
gostota1MNV <- function(r) {
gostota(r, t1.mnv)
}
gostota1MM <- function(r) {
gostota(r, t1.mm)
}
gostota2MNV <- function(r) {
gostota(r, t2.mnv)
}
gostota2MM <- function(r) {
gostota(r, t2.mm)
}
gostota3MNV <- function(r) {
gostota(r, t3.mnv)
}
gostota3MM <- function(r) {
gostota(r, t3.mm)
}
#Za vsak eksperiment poračunamo širino intervalov po modificiranem FD pravilu
wk <- 2.6*IQR(x1)/(n1)^(1/3)
ws <- 2.6*IQR(x2)/(n2)^(1/3)
wd <- 2.6*IQR(x3)/(n3)^(1/3)
#Zdaj poračunajmo vektorje, ki nam bodo določili meje intervalov
meje <- function(x){
#Sprejme stolpec meritev in vrne vektor mej med katerimi je razdalja enaka 
#širini razredov po modificiranem Freedman-Diaconisovem pravilu
n <- length(x)
M <- max(x)
i <- IQR(x)
#Širina razredov po Freedman-Diaconisovem pravilu zaokrožena na 5 decimalk
w <- round(2.6*i/n^(1/3), 5)
vec <- c(0)
j <- 0
while (j < M){
j <- j+w
vec <- c(vec, j)
}
return(vec)
}
xk <- sort(c(seq(0, max(x1+0.5), 0.001), t1.mnv, t1.mm))
xs <- sort(c(seq(0, max(x2+0.5), 0.001), t2.mnv, t2.mm))
xd <- sort(c(seq(0, max(x3+0.5), 0.001), t3.mnv, t3.mm))
xa <- sort(c(xk, xs, xd))
par(mfrow=c(1, 3))
h1<-hist(x1, breaks = meje(x1), col="red", xlab="meritve", ylab="gostota", ylim = c(0.00, 0.7),
   main="Histogram meritev I. poskusa", prob = TRUE) 
lines(xk, gostota1MNV(xk), col="green", lwd=2)
lines(xk, gostota1MM(xk), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h2<-hist(x2, breaks = meje(x2), col="red", xlab="meritve", ylab="gostota", ylim = c(0, 0.4),
   main="Histogram meritev II. poskusa", prob = TRUE) 
lines(xs, gostota2MNV(xs), col="green", lwd=2)
lines(xs, gostota2MM(xs), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
h3<-hist(x3, breaks = meje(x3), col="red", xlab="meritve", ylab="gostota", ylim = c(0, 0.3),
   main="Histogram meritev III. poskusa", prob = TRUE) 
lines(xd, gostota3MNV(xd), col="green", lwd=2)
lines(xd, gostota3MM(xd), col="blue", lwd=2)
legend(x="topright", legend=c("Gostota po MNV", "Gostota po MM"), col = c("green", "blue"), lwd=2)
q()
